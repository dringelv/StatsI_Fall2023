# Remove objects
rm(list=ls())
# Detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# Load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# Load any necessary packages
lapply(c("stargazer","arm","emmeans","ggplot2"),  pkgTest)
# Set working directory for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Load data
df <- read.csv("../../datasets/ess_euroscepticism.csv", row.names="X")
View(df)
# Convert into factor variable
df$edu_cat <- factor(df$edu_cat)
is.factor(df$edu_cat)
# Complete case analysis
df_na <- df[complete.cases(df), ]
# Create dummy variables
df_na$JuniorCycle <- ifelse(df_na$edu_cat == "Junior Cycle", 1, 0)
df_na$LeavingCertificate <- ifelse(df_na$edu_cat == "Leaving Certificate", 1, 0)
df_na$AdvancedCertificate <- ifelse(df_na$edu_cat == "Advanced Certificate", 1, 0)
df_na$Bachelor <- ifelse(df_na$edu_cat == "Bachelor Degree", 1, 0)
df_na$Postgraduate <- ifelse(df_na$edu_cat == "Postgraduate Degree", 1, 0)
# Fit model (ref=JuniorCycle)
model <- lm(euftf_re~LeavingCertificate+AdvancedCertificate+Bachelor+Postgraduate,data=df_na)
summary(model)
summary(model)
# Change reference category to leaving certificate
model <- lm(euftf_re~JuniorCycle+AdvancedCertificate+Bachelor+Postgraduate,data=df_na)
summary(model)
# Education--Categorical independent variable
is.factor(df_na$edu_cat)
model1 <- lm(euftf_re~edu_cat,data=df_na)
summary(model1)
# Change reference category to leaving certificate
levels(df_na$edu_cat) # First level, "Advanced Certificate"
df_na$edu_cat <- relevel(df_na$edu_cat, ref = 4)
levels(df_na$edu_cat) # First level, "Leaving Certificate"
# Refit model
model1 <- lm(euftf_re~edu_cat,data=df_na)
summary(model1)
# Education--Continuous independent variable
model1 <- lm(euftf_re~edlvdie,data=df_na)
summary(model1)
# Add economic dimension
model_eco <- lm(euftf_re~edlvdie + hinctnta,data=df_na)
summary(model_eco)
# Add political dimension
model_pol <- lm(euftf_re~edlvdie + hinctnta + trstplt, data=df_na)
summary(model_pol)
# Add cultural dimension
model_cul <- lm(euftf_re~edlvdie + hinctnta + trstplt + imwbcnt, data=df_na)
summary(model_cul)
# Add socio-economic variables
model_final <- lm(euftf_re~edlvdie + hinctnta + trstplt + imwbcnt + gndr + agea + brncntr, data=df_na)
summary(model_final)
# Get Latex table
stargazer(model1,model_eco,model_pol,model_cul,model_final)
# How to visualize results?
coefplot(model_final) # 95% Confidence intervals (and 50% CIs)
coefplot(model1, add=TRUE, col.pts="gray")
# Does adding economic dimension improve fit?
anova(model1, model_eco, test='F')
summary(model_eco)
# Does adding political dimension improve fit?
anova(model1, model_pol, test='F')
summary(model_pol)
# Does adding economic dimension improve fit?
anova(model1, model_eco, test='F')
summary(model_eco)
# Does adding political dimension improve fit?
anova(model1, model_pol, test='F')
summary(model_pol)
# What about political dimension alone?
model3 <- lm(euftf_re~edlvdie+trstplt,data=df_na)
anova(model1, model3, test='F')
summary(model3)
# Does adding the education dummy set improve fit?
model5 <- lm(euftf_re~hinctnta + trstplt + imwbcnt, data=df_na)
model6 <- lm(euftf_re~hinctnta + trstplt + imwbcnt + edu_cat, data=df_na)
anova(model5, model6, test='F')
summary(model6)
# Fit model
model1 <- lm(euftf_re~edu_cat+imwbcnt,data=df_na)
# Plot
plot(df_na$imwbcnt, df_na$euftf_re)
abline(model1$coefficients[1], model1$coefficients[6],col="black") # edu_cat=0, "Leaving Certificate"
abline(model1$coefficients[1]+model1$coefficients[2], model1$coefficients[6],col="blue") # edu_cat=1, "Advanced Certificate"
abline(model1$coefficients[1]+model1$coefficients[3], model1$coefficients[6],col="green") # edu_cat=2, "Bachelor"
abline(model1$coefficients[1]+model1$coefficients[4], model1$coefficients[6],col="gray") # edu_cat=3, "Junior Cycle"
abline(model1$coefficients[1]+model1$coefficients[5], model1$coefficients[6],col="orange") # edu_cat=4, "Postgraduate"
legend(7, 10, # Legend
legend=c("Leaving Certificate","Advanced Certificate","Bachelor","Junior Cycle","Postgraduate"),
col=c("black","blue","green","gray","orange"),
pch=1)
# In ggplot
ggplot(df_na, aes(imwbcnt, euftf_re, group = edu_cat)) +
geom_point(aes(colour = edu_cat)) + # Add points
geom_line(data = df_na, aes(y = model1$fitted.values, colour = edu_cat)) # Add regression lines
# Recode dummy variables as 0,1; needed for interactions
df_na$gndr <- ifelse(df_na$gndr == 2, 1, 0)
# And convert into factor
df_na$gndr <- factor(df_na$gndr, labels = c("Male", "Female"))
# Fit model
model_int <- lm(euftf_re~edlvdie +
imwbcnt +
gndr +
imwbcnt*gndr, data=df_na)
summary(model_int)
# Recode dummy variables as 0,1; needed for interactions
df_na$gndr <- ifelse(df_na$gndr == 2, 1, 0)
# And convert into factor
df_na$gndr <- factor(df_na$gndr, labels = c("Male", "Female"))
# Fit model
model_int <- lm(euftf_re~edlvdie +
imwbcnt +
gndr +
imwbcnt*gndr, data=df_na)
# And convert into factor
df_na$gndr <- factor(df_na$gndr, labels = c("Male", "Female"))
# Fit model
model_int <- lm(euftf_re~edlvdie +
imwbcnt +
gndr +
imwbcnt*gndr, data=df_na)
summary(model_int)
summary(model_int)
# Recode dummy variables as 0,1; needed for interactions
df_na$gndr <- ifelse(df_na$gndr == 2, 1, 0)
# And convert into factor
df_na$gndr <- factor(df_na$gndr, labels = c("Male", "Female"))
