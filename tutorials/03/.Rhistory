theme_classic() +
theme(legend.title = element_blank(), legend.justification = c(1, 1), legend.position = c(1, 1)) +
scale_color_manual(labels = c("manual", "automatic"), values = c("blue", "red")) +
labs(title = "Plot of Fuel Efficiency by Weight for 32 Cars", subtitle = "Number of cylinders; size = horsepower") +
xlab("weight (1000 lbs)")
4+4
v <- 4
ggplot(expenditure, aes(X1, X3))+
geom_point() +
theme_classic()+
install.packages("tidyverse")
library(ggplot2)
ggplot(expenditure, aes(X1, X3))+
geom_point() +
theme_classic()+
ggplot(expenditure, aes(X3, X1)) +
geom_point() +
theme_classic() +
# There seems to be a positive relationship between X1 and X3 values. With the
# exception of some outliers, a lower X1 value correlates to a lower X3 value
# and vice versa.
ggplot(expenditure, aes(X2, X3))+
geom_point() +
theme_classic()+
# The scatter plot shows a slight U shape. There seems to be very little
# correlation between X2 and X3
## Plotting the relationship between the Region and Y
# A simple plot show the spread of Y according to Region, but this could be
#clearer
plot(expenditure$Region, expenditure$Y)
expenditure <- read.table("https://raw.githubusercontent.com/ASDS-TCD/StatsI_Fall2023/main/datasets/expenditure.txt", header=T)
expenditure
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
library(ggplot2)
lapply(c("stringr"),  pkgTest)
ggplot(expenditure, aes(X1, Y))+
geom_point() +
theme_classic()+
# There is a slight positive relationship between Y and X1, on the lower end,
# the relationship is stronger, and gets weaker as values increase.
plot(expenditure$X2, expenditure$Y)
ggplot(expenditure, aes(X2, Y))+
geom_point() +
theme_classic()+
# The scatter plot forms a U shape. It seems that the relationship between Y
# and X2 is negative at first, but changes to a positive one near the middle
# of the graph
plot(expenditure$X3, expenditure$Y)
ggplot(expenditure, aes(X3, Y))+
geom_point() +
theme_classic()+
# There seems to be a slight positive relationship between Y and X3, as one
# increases, so does the other
plot(expenditure$X2, expenditure$X1)
ggplot(expenditure, aes(X1, X3))+
geom_point() +
theme_classic()+
ggplot(expenditure, aes(X3, X1)) +
geom_point() +
theme_classic() +
# There seems to be a positive relationship between X1 and X3 values. With the
# exception of some outliers, a lower X1 value correlates to a lower X3 value
# and vice versa.
ggplot(expenditure, aes(X2, X3))+
geom_point() +
theme_classic()+
# The scatter plot shows a slight U shape. There seems to be very little
# correlation between X2 and X3
## Plotting the relationship between the Region and Y
# A simple plot show the spread of Y according to Region, but this could be
#clearer
plot(expenditure$Region, expenditure$Y)
ggplot(expenditure, aes(X3, X1))+
geom_point()
ggplot(expenditure, aes(X3, X1))+
geom_point()+
theme_classic()
ggplot(expenditure, aes(X2, X3))+
geom_point() +
theme_classic()
ggplot(expenditure, aes(X1, X3))+
geom_point()+
theme_classic()
ggplot(expenditure, aes(X3, X1))+
geom_point()+
theme_classic()
ggplot(expenditure, aes(X1, Y))+
geom_point() +
theme_classic()
# There is a slight positive relationship between Y and X1, on the lower end,
# the relationship is stronger, and gets weaker as values increase.
ggplot(expenditure, aes(X2, Y))+
geom_point() +
theme_classic()
# The scatter plot forms a U shape. It seems that the relationship between Y
# and X2 is negative at first, but changes to a positive one near the middle
# of the graph
ggplot(expenditure, aes(X3, Y))+
geom_point() +
theme_classic()
# There seems to be a slight positive relationship between Y and X3, as one
# increases, so does the other
ggplot(expenditure, aes(X2, X1))+
geom_point() +
theme_classic()
# The scatter plot forms a U shape. X2 values show little correlation to Y
# values
ggplot(expenditure, aes(X3, X1))+
geom_point()+
theme_classic()
# There seems to be a positive relationship between X1 and X3 values. With the
# exception of some outliers, a lower X1 value correlates to a lower X3 value
# and vice versa.
ggplot(expenditure, aes(X2, X3))+
geom_point() +
theme_classic()
ggplot(expenditure, aes(x=factor(Region), y=Y)) +
geom_boxplot() +
ggplot(expenditure, aes(x=factor(Region), y=Y)) +
geom_boxplot()
# Finally, plotting again, this time showing the means of each region's
# per capita expenditure on shelters/housing assistance in state
ggplot(expenditure, aes(x=factor(Region), y=Y)) +
geom_boxplot() +
stat_summary(fun.y="mean", color="red") +
labs(title="Box plot",
subtitle="Per capita expenditure on shelters/housing
assistance in state grouped by Region",
x="Region",
y="Expenditure")
# Plotting the same graph while grouping the results according to region.
expenditure %>%
filter(Region %in% c(1,2, 3, 4)) %>%
group_by(Region) %>%
ggplot(aes(x = X1, y = Y, color = factor(Region)))+
geom_point() +
theme_classic()
# Plotting the same graph while grouping the results according to region.
expenditure %>%
filter(Region %in% c(1,2, 3, 4)) %>%
group_by(Region) %>%
ggplot(aes(x = X1, y = Y, color = factor(Region)))+
geom_point() +
theme_classic()
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
lapply(c("stringr"),  pkgTest)
install.packages("ggplot2")
install.packages("tidyverse")
# Plotting the same graph while grouping the results according to region.
expenditure %>%
filter(Region %in% c(1,2, 3, 4)) %>%
group_by(Region) %>%
ggplot(aes(x = X1, y = Y, color = factor(Region)))+
geom_point() +
theme_classic()
# Plotting the same graph while grouping the results according to region.
expenditure %>%
filter(Region %in% c(1,2, 3, 4)) %>%
group_by(Region) %>%
ggplot(aes(x = X1, y = Y, color = factor(Region)))+
geom_point() +
theme_classic()
## Plotting the relationship between Y and X1.
# A simple plot
ggplot(expenditure, aes(X1, Y)) +
geom_point()
ggplot(expenditure, aes(X1, Y)) +
geom_point()
ggplot(expenditure, aes(X1, Y)) +
geom_point()
ggplot(expenditure, aes(X1, Y)) +
geom_point()
setwd("C:/Users/dring/Documents/GitHub/StatsI_Fall2023/problemSets/PS01/my_answers")
# set wd
getwd()
setwd("C:/Users/dring/Documents/GitHub/StatsI_Fall2023/problemSets/PS01/my_answers")
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
library(ggplot2)
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("stringr"),  pkgTest)
install.packages("ggplot2")
install.packages("tidyverse")
install.packages("ggplot2")
library(ggplot2)
expenditure <- read.table("https://raw.githubusercontent.com/ASDS-TCD/StatsI_Fall2023/main/datasets/expenditure.txt", header=T)
expenditure
ne_1 <- expenditure[expenditure$Region == 1,]
nc_2 <- expenditure[expenditure$Region == 2,]
so_3 <- expenditure[expenditure$Region == 3,]
we_4 <- expenditure[expenditure$Region == 4,]
ggplot(expenditure, aes(x=factor(Region), y=Y)) +
geom_boxplot() +
stat_summary(fun.y="mean", color="red") +
labs(title="Box plot",
subtitle="Per capita expenditure on shelters/housing
assistance in state grouped by Region",
x="Region",
y="Expenditure")
ggplot(expenditure, aes(X1, Y)) +
geom_point()
expenditure %>%
filter(Region %in% c(1,2, 3, 4)) %>%
group_by(Region) %>%
ggplot(aes(x = X1, y = Y, color = factor(Region)))+
geom_point() +
theme_classic()
group_by
# Plotting the same graph while grouping the results according to region.
expenditure %>%
filter(Region %in% c(1,2, 3, 4)) %>%
group_by(Region) %>%
ggplot(aes(x = X1, y = Y, color = factor(Region)))+
geom_point() +
theme_classic()
install.packages("magrittr")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(magrittr)
expenditure %>%
filter(Region %in% c(1,2, 3, 4)) %>%
group_by(Region) %>%
ggplot(aes(x = X1, y = Y, color = factor(Region)))+
geom_point() +
theme_classic()
install.packages("tidyverse")
library(tidyverse)
# Plotting the same graph while grouping the results according to region.
expenditure %>%
filter(Region %in% c(1,2, 3, 4)) %>%
group_by(Region) %>%
ggplot(aes(x = X1, y = Y, color = factor(Region)))+
geom_point() +
theme_classic()
# Plotting the same graph while grouping the results according to region.
expenditure %>%
filter(Region %in% c(1,2, 3, 4)) %>%
group_by(Region) %>%
ggplot(aes(x = X1, y = Y, color = factor(Region), shape = factor(Region)))+
geom_point() +
theme_classic()
getwd()
# Set working directory
setwd("C:/Users/dring/Documents/GitHub/StatsI_Fall2023/tutorials/03")
getwd()
# set wd
getwd()
setwd("C:/Users/dring/Documents/GitHub/StatsI_Fall2023/problemSets/PS01/my_answers")
# Set working directory
setwd("C:/Users/dring/Documents/GitHub/StatsI_Fall2023/tutorials/03")
getwd()
# Load data
df_not_tidy <- read.csv("datasets/movies.csv")
# Load data
df_not_tidy <- read.csv("C:/Users/dring/Documents/GitHub/StatsI_Fall2023/datasets/movies.csv")
# First step, look at data
View(df_not_tidy)
# Install and load packages
# Adopted from: https://stackoverflow.com/questions/4090169/elegant-way-to-check-for-missing-packages-and-install-them
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)
}
if(!require(lubridate)){
install.packages("lubridate")
library(lubridate)
}
# Get working directory
getwd()
# Set working directory
setwd("C:/Users/dring/Documents/GitHub/StatsI_Fall2023/tutorials/03")
str(df_not_tidy)
head(df_not_tidy)
summary(df_not_tidy)
# Load tidy version of data
# The data is prepared using the data_wraning.R script.
df <- readRDS("datasets/movies.rds")
# Load tidy version of data
# The data is prepared using the data_wraning.R script.
df <- readRDS("Users/dring/Documents/GitHub/StatsI_Fall2023/datasets/movies.rds")
# Load tidy version of data
# The data is prepared using the data_wraning.R script.
df <- readRDS("C:/Users/dring/Documents/GitHub/StatsI_Fall2023/datasets/movies.rds")
str(df)
# First step, look at data
View(df)
class(df$genre)
levels(df$genre)
# Contingency table
table(df$genre, # Genre
df$critics_rating) # Rating
# Option 1:
# Dataframe subsetting: df[rows, columns]
df_s <- df[df$genre=="Comedy" |
df$genre=="Drama" |
df$genre=="Documentary", ]
View(df_s)
# Step by step
df$genre # Select column
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)
df_s <- subset(df, df$genre %in% c("Comedy","Documentary","Drama"))
View(df_s)
?subset
?subset
# Contingency table
table(df_s$genre, # Genre
df_s$critics_rating) # Rating
# Problem: Although we filtered our data
# the underlying levels still exist. Getting rid of
# these, we use the droplevels-function.
class(df_s$genre)
levels(df_s$genre)
df_s$genre <- droplevels(df_s$genre)
# Contingency table
table(df_s$genre, # Genre
df_s$critics_rating) # Rating
# Add marginal distributions
addmargins(table(df_s$genre, # Genre
df_s$critics_rating)) # Rating
# Joint probability
prop.table(table(df_s$genre,
df_s$critics_rating))
getwd()
# Set working directory
setwd("C:/Users/dring/Documents/GitHub/StatsI_Fall2023/tutorials/03")
getwd()
# Load data
df_not_tidy <- read.csv("C:/Users/dring/Documents/GitHub/StatsI_Fall2023/datasets/movies.csv")
# Load tidy version of data
# The data is prepared using the data_wraning.R script.
df <- readRDS("C:/Users/dring/Documents/GitHub/StatsI_Fall2023/datasets/movies.rds")
str(df)
# Option 1:
# Dataframe subsetting: df[rows, columns]
df_s <- df[df$genre=="Comedy" |
df$genre=="Drama" |
df$genre=="Documentary", ]
View(df_s)
library(tidyverse)
# Contingency table
table(df_s$genre, # Genre
df_s$critics_rating) # Rating
# Problem: Although we filtered our data
# the underlying levels still exist. Getting rid of
# these, we use the droplevels-function.
class(df_s$genre)
levels(df_s$genre)
df_s$genre <- droplevels(df_s$genre)
# Contingency table
table(df_s$genre, # Genre
df_s$critics_rating) # Rating
# Add marginal distributions
addmargins(table(df_s$genre, # Genre
df_s$critics_rating)) # Rating
# Joint probability
prop.table(table(df_s$genre,
df_s$critics_rating))
# (A) Conditional probability
# What is the probability of "Rotten",
# conditional on Comedy?
?prop.table()
# Over rows --> Rating conditional on genre
prop.table(table(df_s$genre, # rows
df_s$critics_rating), # columns
margin = 1) # over rows
# Add marginal distributions
# Over rows --> Rating conditional on genre
addmargins(prop.table(table(df_s$genre,
df_s$critics_rating),
margin = 1)) # over rows
# Round
round(addmargins(prop.table(table(df_s$genre,
df_s$critics_rating),
margin = 1)), 2)
# Step by step
round(0.72413793, 2) # Round to two decimals
# Over columns --> Genre conditional on rating
addmargins(prop.table(table(df_s$genre, # rows
df_s$critics_rating), # columns
margin = 2)) # over columns
# Bar plot
barplot(prop.table(table(df_s$genre,
df_s$critics_rating), margin=1),
xlab="Ranking",
ylab="Proportions",
main="Critics Rating by Genre",
beside=TRUE,
legend.text = TRUE,
args.legend = list(x=12,
y=0.7,
cex = 0.8,
box.col = "white"))
63/190
63/87
63/444
# Bar plot
barplot(prop.table(table(df_s$genre,
df_s$critics_rating), margin=1),
xlab="Ranking",
ylab="Proportions",
main="Critics Rating by Genre",
beside=TRUE,
legend.text = TRUE,
args.legend = list(x=12,
y=0.7,
cex = 0.8,
box.col = "white"))
png(filename = "tutorials/03/barplot.png",
width = 600,
height = 350)
barplot(prop.table(table(df_s$genre,
df_s$critics_rating),margin=1),
xlab="Ranking",
ylab="Proportions",
main="Critics Rating by Genre",
beside=TRUE,
legend.text = TRUE,
args.legend = list(x=12,
y=0.7,
cex = 0.8,
box.col = "white"))
png(filename = "tutorials/03/barplot.png",
width = 600,
height = 350)
dev.off()
png(filename = "tutorials/03/barplot.png",
width = 600,
height = 350)
# Run Chi square test
chisq.test(df_s$genre,
df_s$critics_rating)
# Check p-value
sprintf("%.20f",1.097e-12)
# A little side note, look at residuals
chi <- chisq.test(df_s$genre,
df_s$critics_rating)
# Returns the Pearson residuals, (observed - expected) / sqrt(expected)
?chisq.test
chi$residuals
# Check p-value
sprintf("%.20f",1.097e-12)
# Calculate correlation
cor(df$income,df$edu)
# Load data
df <- read.csv("datasets/fictional_data.csv")
png(filename = "tutorials/03/barplot.png",
width = 600,
height = 350)
# Bar plot
barplot(prop.table(table(df_s$genre,
df_s$critics_rating), margin=1),
xlab="Ranking",
ylab="Proportions",
main="Critics Rating by Genre",
beside=TRUE,
legend.text = TRUE,
args.legend = list(x=12,
y=0.7,
cex = 0.8,
box.col = "white"))
png(filename = "tutorials/03/barplot.png",
width = 600,
height = 350)
png(filename = "C:/Users/dring/Documents/GitHub/StatsI_Fall2023/tutorials/03/barplot.png",
width = 600,
height = 350)
barplot(prop.table(table(df_s$genre,
df_s$critics_rating),margin=1),
xlab="Ranking",
ylab="Proportions",
main="Critics Rating by Genre",
beside=TRUE,
legend.text = TRUE,
args.legend = list(x=12,
y=0.7,
cex = 0.8,
box.col = "white"))
dev.off()
